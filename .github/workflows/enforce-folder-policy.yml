# Workflow-এর নাম
name: 'Enforce Folder Policy for Collaborators'

# কখন এই Workflow চলবে?
on:
  # main ব্রাঞ্চের জন্য পুল রিকোয়েস্ট তৈরি বা আপডেট হলে
  pull_request:
    branches:
      - main
  # main ব্রাঞ্চে সরাসরি পুশ করা হলে
  push:
    branches:
      - main

jobs:
  check-changes:
    runs-on: ubuntu-latest
    steps:
      # ধাপ ১: ব্যবহারকারীর নাম পরীক্ষা করা
      # যদি ব্যবহারকারী রিপোজিটরির মালিক হন, তাহলে কোনো পরীক্ষা ছাড়াই সফলভাবে শেষ হবে
      - name: Bypass check for repository owner
        if: github.actor == github.repository_owner
        run: |
          echo "✅ Skipping policy check because the user (${{ github.actor }}) is the repository owner."
          exit 0

      # ধাপ ২: কোডটি চেকআউট করা (শুধুমাত্র যদি ব্যবহারকারী মালিক না হন)
      - name: Checkout code for non-owner
        if: github.actor != github.repository_owner
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # ধাপ ৩: পরিবর্তিত ফাইলগুলোর তালিকা বের করা (শুধুমাত্র যদি ব্যবহারকারী মালিক না হন)
      - name: Get changed files for non-owner
        if: github.actor != github.repository_owner
        id: changed-files
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            FILES=$(git diff --name-only HEAD~1 HEAD)
          else
            FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }})
          fi
          echo "changed_files<<EOF" >> $GITHUB_OUTPUT
          echo "$FILES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # ধাপ ৪: ফাইলগুলো অনুমোদিত ফোল্ডারে আছে কিনা তা পরীক্ষা করা (শুধুমাত্র যদি ব্যবহারকারী মালিক না হন)
      - name: Enforce policy for non-owner
        if: github.actor != github.repository_owner
        run: |
          echo "User (${{ github.actor }}) is not the owner. Enforcing folder policy."
          echo "Files changed:"
          echo "${{ steps.changed-files.outputs.changed_files }}"
          
          if [[ -z "${{ steps.changed-files.outputs.changed_files }}" ]]; then
            echo "✅ No files changed. Skipping check."
            exit 0
          fi

          for file in ${{ steps.changed-files.outputs.changed_files }}; do
            if [[ ! "$file" == blogs/* ]]; then
              echo "❌ ERROR: Changes outside the 'blogs' folder are not allowed for collaborators."
              echo "File '$file' is not in the allowed folder."
              exit 1
            fi
          done
          
          echo "✅ SUCCESS: All changes are within the 'blogs' folder."
